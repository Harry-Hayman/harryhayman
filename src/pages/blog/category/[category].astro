---
import AppLayout from "@layouts/AppLayout.astro";
import { getCollection } from "astro:content";
import BlogCard from "@components/BlogCard.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const categories = [...new Set(posts.map((post) => post.data.category))].filter(
    (category): category is string => typeof category === 'string'
  );

  return categories.map((category) => ({
    params: { category },
    props: { 
      posts: posts.filter(post => post.data.category === category),
      category 
    },
  }));
}

interface Props {
  posts: any[];
  category: string;
}

const { posts, category } = Astro.props;
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<AppLayout title={`${category} - Blog - Harry Hayman`}>
  <div class="py-12 sm:py-16">
    <!-- Header -->
    <header class="text-center mb-12">
      <h1 class="text-3xl sm:text-4xl md:text-5xl font-serif font-bold mb-4 text-[rgb(var(--text-primary))]">
        {category}
      </h1>
      <p class="text-[rgb(var(--text-primary))] text-lg">
        Articles and insights about {category.toLowerCase()}
      </p>
      <a 
        href="/blog" 
        class="inline-block mt-4 text-[rgb(var(--text-primary))] hover:text-purple-600"
      >
        ‚Üê Back to all posts
      </a>
    </header>

    <!-- Blog Posts Grid -->
    <div class="grid md:grid-cols-2 gap-8">
      {
        sortedPosts.map((post) => (
          <BlogCard
            title={post.data.title}
            description={post.data.description}
            pubDate={post.data.pubDate}
            image={post.data.image}
            category={post.data.category}
            href={`/blog/${post.slug}`}
          />
        ))
      }
    </div>

    <!-- Empty State -->
    {
      sortedPosts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-[rgb(var(--text-primary))] text-lg">No posts found in this category.</p>
        </div>
      )
    }
  </div>
</AppLayout>
