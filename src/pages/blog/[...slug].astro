---
import { getCollection } from "astro:content";
import AppLayout from "@layouts/AppLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<AppLayout
  title={post.data.title}
  description={post.data.description}
  ogImage={post.data.image}
>
  <article class="py-12 sm:py-16">
    <header class="mb-12">
      <div class="text-center">
        {post.data.category && (
          <span class="inline-block px-4 py-1 text-sm font-medium mb-4 rounded-full bg-purple-600 text-white">
            {post.data.category}
          </span>
        )}
        <h1 class="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif font-bold mb-4 text-[rgb(var(--text-primary))]">
          {post.data.title}
        </h1>
        <time 
          class="text-[rgb(var(--text-primary))] opacity-80" 
          datetime={post.data.pubDate.toISOString()}
        >
          {post.data.pubDate.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })}
        </time>
      </div>
      {post.data.image?.src && (
        <div class="mt-8 rounded-xl overflow-hidden">
          <img
            src={post.data.image.src}
            alt={post.data.title}
            class="w-full h-[300px] sm:h-[400px] md:h-[500px] object-cover"
          />
        </div>
      )}
    </header>

    <div class="prose prose-lg mx-auto">
      <div class="text-[rgb(var(--text-primary))]">
        <Content />
      </div>
    </div>
  </article>
</AppLayout>

<style is:global>
.prose {
  --tw-prose-body: rgb(var(--text-primary)) !important;
  --tw-prose-headings: rgb(var(--text-primary)) !important;
  --tw-prose-links: rgb(var(--button-primary));
  --tw-prose-bold: rgb(var(--text-primary)) !important;
  --tw-prose-counters: rgb(var(--text-primary)) !important;
  --tw-prose-bullets: rgb(var(--text-primary)) !important;
  --tw-prose-quotes: rgb(var(--text-primary)) !important;
  --tw-prose-quote-borders: rgb(var(--button-primary));
  --tw-prose-code: rgb(var(--text-primary)) !important;
  --tw-prose-pre-code: rgb(var(--text-primary)) !important;
  --tw-prose-pre-bg: rgb(var(--card-bg));
  max-width: none;
}

.prose * {
  color: rgb(var(--text-primary)) !important;
}

.prose a {
  color: rgb(var(--button-primary)) !important;
  text-decoration-color: rgb(var(--button-primary));
}

.prose code {
  background-color: rgb(var(--card-bg));
  padding: 0.2em 0.4em;
  border-radius: 0.375rem;
}

.prose pre {
  background-color: rgb(var(--card-bg)) !important;
  border: 1px solid rgb(var(--nav-border));
}

.prose img {
  border-radius: 0.75rem;
}

.prose blockquote {
  border-left-color: rgb(var(--button-primary));
  background-color: rgb(var(--card-bg));
  padding: 1rem;
  border-radius: 0.5rem;
}
</style>
